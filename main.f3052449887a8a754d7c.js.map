{"version":3,"sources":["webpack:///./js/task3.js"],"names":["makeTransaction","transaction","min","max","delay","Math","floor","random","Promise","resolve","reject","setTimeout","id","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":"2JAIMA,EAAkB,SAACC,GACrB,IAL+BC,EAAKC,EAK9BC,GALyBF,EAKS,IALJC,EAKS,IAJxCE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAqBlD,OAdgB,IAAIM,SAAQ,SAACC,EAASC,GAElCC,YAAW,WACYN,KAAKE,SAAW,GAGnCE,EAAQ,CAAEG,GAAIX,EAAYW,GAAGC,KAAMT,IAEnCM,EAAQT,EAAYW,MAErBR,OAOLU,EAAa,SAAC,GAAiB,IAAfF,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACxBE,QAAQC,IAAR,eAA2BJ,EAA3B,iBAA8CC,EAA9C,OAGII,EAAW,SAAAL,GACfG,QAAQG,KAAR,gCAA6CN,EAA7C,8BAaFZ,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,KAC/BC,KAAKN,GACLO,MAAMJ,GAETjB,EAAgB,CAAEY,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,K","file":"main.f3052449887a8a754d7c.js","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => { \n    const delay = randomIntegerFromInterval(200, 500);\n    // console.log(delay);\n\n    const promise = new Promise((resolve, reject) => {\n        // const delay = randomIntegerFromInterval(2000, 5000 );\n        setTimeout(() => {\n            const canProcess = Math.random() > 0.3;\n           \n        if (canProcess) {\n            resolve({ id: transaction.id,time: delay });\n        } else {\n            reject (transaction.id);\n        }\n        }, delay);\n        // console.log(delay);\n    });\n   \n    return promise;\n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n/*\n * Работает так\n//  */\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\n * Должно работать так\n//  */\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);"],"sourceRoot":""}